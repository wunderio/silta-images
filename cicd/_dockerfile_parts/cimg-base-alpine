# https://github.com/CircleCI-Public/cimg-base/blob/main/22.04/Dockerfile

# ENV TERM=dumb \
#     PAGER=cat

RUN apk update && apk add --no-cache bash sudo && \
  addgroup -S circleci && \
  adduser \
    --disabled-password \
    --gecos "" \
    --home /home/circleci \
    --ingroup circleci \
    --uid=3434 \
    --shell=/bin/bash \
    circleci

SHELL ["/bin/bash", "-exo", "pipefail", "-c"]

RUN echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci && \
    echo 'Defaults    env_keep += "DEBIAN_FRONTEND"' >> /etc/sudoers.d/env_keep && \
    sudo -u circleci mkdir /home/circleci/project && \
    sudo -u circleci mkdir /home/circleci/bin && \
    # Install Dockerize v0.6.1
    # Source repo: https://github.com/jwilder/dockerize
    # I (Ricardo) would like to replace this one day. It's a tool not really
    # maintained and we can likely offer something better.
    curl -sSL --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz "https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz" && \
    tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz && \
    rm -rf /tmp/dockerize-linux-amd64.tar.gz && \
    # Quick test of Dockerize
    dockerize --version && \
    apk add --no-cache \
      autoconf \
      # build-essential \
      ca-certificates \
      cmake \
      # already installed but here for consistency
      curl \
      gnupg \
      gzip \
      jq \
      # libcurl4-openssl-dev \
      curl-dev \
      # popular DB lib - MariaDB
      # libmariadb-dev \
      mariadb-dev \
      # allows MySQL users to use MariaDB lib
      # libmariadb-dev-compat \
      # popular DB lib - PostgreSQL
      libpq-dev \
      # libssl-dev \
      openssl-dev \
      # libsqlite3-dev \
      sqlite-dev \
      make \
      # for ssh-enabled builds
      nano \
      net-tools \
      # netcat \
      netcat-openbsd \
      openssh-client \
      parallel \
      # compiling tool
      # pkg-config \
      pkgconfig \
      postgresql-client \
      shellcheck \
      # software-properties-common \
      # already installed but here for consistency
      sudo \
      tar \
      tzdata \
      unzip \
      # for ssh-enabled builds
      vim \
      wget \
      zip \
      git \
      procps

RUN apk add --update docker && \
  docker --version

# I don't think this works
#ENV COMPOSE_VER 2.6.0
ENV COMPOSE_SWITCH_VERSION 1.0.4

RUN apk add --no-cache docker-compose docker-cli-compose && \
	curl -fL https://github.com/docker/compose-switch/releases/download/v${COMPOSE_SWITCH_VERSION}/docker-compose-linux-amd64 -o /usr/local/bin/compose-switch && \
	# Quick test of the Docker Compose install
	docker compose version && \
	chmod +x /usr/local/bin/compose-switch && \
  # update-alternatives --install /usr/local/bin/docker-compose docker-compose /usr/local/bin/compose-switch 99 && \
	mv /usr/bin/docker-compose /usr/bin/docker-compose_original && \
	ln -s /usr/local/bin/compose-switch /usr/local/bin/docker-compose && \
  # Tests if docker-compose for v1 is transposed to v2
	docker-compose version

RUN curl -sSL "https://github.com/mikefarah/yq/releases/download/v4.23.1/yq_linux_amd64.tar.gz" | \
	tar -xz -C /usr/local/bin && \
	# mv /usr/local/bin/yq{_linux_amd64,}
	mv /usr/local/bin/yq_linux_amd64 /usr/local/bin/yq
USER circleci
# Run commands and tests as circleci user
RUN whoami && \
	# opt-out of the new security feature, not needed in a CI environment
	git config --global --add safe.directory '*'

# Match the default CircleCI working directory
WORKDIR /home/circleci/project
